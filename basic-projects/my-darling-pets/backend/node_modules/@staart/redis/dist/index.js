"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.redis = exports.redisQueue = void 0;
const dotenv_1 = require("dotenv");
const handy_redis_1 = require("handy-redis");
const url_1 = require("url");
const rsmq_1 = __importDefault(require("rsmq"));
dotenv_1.config();
const REDIS_URL = process.env.REDIS_URL || "redis://127.0.0.1:6379";
const parsedUrl = new url_1.URL(REDIS_URL);
const host = parsedUrl.hostname || "127.0.0.1";
const port = Number(parsedUrl.port || 6379);
const password = parsedUrl.password
    ? decodeURIComponent(parsedUrl.password)
    : undefined;
/**
 * Redis queue for messages
 */
exports.redisQueue = new rsmq_1.default({
    host,
    port,
    password,
});
/**
 * Redis client
 */
const redis = handy_redis_1.createHandyClient({
    url: REDIS_URL,
    retry_strategy: (options) => {
        if (options.error && options.error.code === "ECONNREFUSED") {
            console.error("Redis connection failed", "Server refused the connection");
        }
        if (options.total_retry_time > 1000 * 60 * 60) {
            console.error("Redis connection failed", "Total retry time exhausted");
        }
        if (options.attempt > 10) {
            console.error("Redis connection failed", "Max number of attempts exceeded");
            return 43200;
        }
        // Reconnect after this time
        return Math.min(options.attempt * 100, 3000);
    },
});
exports.redis = redis;
//# sourceMappingURL=index.js.map