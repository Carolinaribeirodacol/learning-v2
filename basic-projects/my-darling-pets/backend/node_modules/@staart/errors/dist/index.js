"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.log = exports.watch = exports.warn = exports.success = exports.start = exports.star = exports.pending = exports.pause = exports.note = exports.info = exports.fav = exports.fatal = exports.debug = exports.error = exports.complete = exports.await = exports.logError = exports.CANNOT_INVITE_DOMAIN = exports.NOT_ENABLED_2FA = exports.CANNOT_UPDATE_SOLE_OWNER = exports.CANNOT_DELETE_SOLE_OWNER = exports.CANNOT_DELETE_SOLE_MEMBER = exports.EMAIL_CANNOT_DELETE = exports.OAUTH_NO_EMAIL = exports.OAUTH_ERROR = exports.OAUTH_NO_NAME = exports.OAUTH_IDENTITY_TAKEN = exports.OAUTH_NO_ID = exports.REFERRER_CHECK_FAIL = exports.IP_RANGE_CHECK_FAIL = exports.INVALID_API_KEY_SECRET = exports.INVALID_2FA_TOKEN = exports.UNAPPROVED_LOCATION = exports.UNVERIFIED_EMAIL = exports.INSUFFICIENT_PERMISSION = exports.INCORRECT_PASSWORD = exports.USER_IS_MEMBER_ALREADY = exports.DOMAIN_ALREADY_VERIFIED = exports.INVALID_LOGIN = exports.USERNAME_EXISTS = exports.EMAIL_EXISTS = exports.STRIPE_NO_CUSTOMER = exports.INVOICE_NOT_FOUND = exports.SUBSCRIPTION_NOT_FOUND = exports.ORGANIZATION_NOT_FOUND = exports.MEMBERSHIP_NOT_FOUND = exports.USER_NOT_FOUND = exports.RESOURCE_NOT_FOUND = exports.DOMAIN_MISSING_DNS = exports.DOMAIN_MISSING_FILE = exports.MISSING_FIELD = exports.DISPOSABLE_EMAIL = exports.MISSING_PASSWORD = exports.MISSING_PRIMARY_EMAIL = exports.INVALID_INPUT = exports.INVALID_SIGNATURE = exports.MISSING_SIGNATURE = exports.EXPIRED_TOKEN = exports.INVALID_TOKEN = exports.REVOKED_TOKEN = exports.MISSING_TOKEN = exports.UNABLE_TO_SEND_EMAIL = exports.DOMAIN_UNABLE_TO_VERIFY = exports.DEFAULT = void 0;
const dotenv_1 = require("dotenv");
const http_status_codes_1 = require("http-status-codes");
dotenv_1.config();
// Server errors
exports.DEFAULT = `${http_status_codes_1.INTERNAL_SERVER_ERROR}/server-error`;
exports.DOMAIN_UNABLE_TO_VERIFY = `${http_status_codes_1.BAD_REQUEST}/domain-unable-to-verify`;
exports.UNABLE_TO_SEND_EMAIL = `${http_status_codes_1.INTERNAL_SERVER_ERROR}/unable-to-email`;
// Tokens
exports.MISSING_TOKEN = `${http_status_codes_1.UNPROCESSABLE_ENTITY}/missing-token`;
exports.REVOKED_TOKEN = `${http_status_codes_1.UNAUTHORIZED}/revoked-token`;
exports.INVALID_TOKEN = `${http_status_codes_1.UNAUTHORIZED}/invalid-token`;
exports.EXPIRED_TOKEN = `${http_status_codes_1.UNAUTHORIZED}/expired-token`;
// Stripe webhook signature
exports.MISSING_SIGNATURE = `${http_status_codes_1.UNPROCESSABLE_ENTITY}/missing-signature`;
exports.INVALID_SIGNATURE = `${http_status_codes_1.UNAUTHORIZED}/invalid-signature`;
// Invalid user inputs
exports.INVALID_INPUT = `${http_status_codes_1.UNPROCESSABLE_ENTITY}/invalid-input`;
exports.MISSING_PRIMARY_EMAIL = `${http_status_codes_1.UNPROCESSABLE_ENTITY}/missing-primary-email`;
exports.MISSING_PASSWORD = `${http_status_codes_1.UNPROCESSABLE_ENTITY}/missing-password`;
exports.DISPOSABLE_EMAIL = `${http_status_codes_1.UNPROCESSABLE_ENTITY}/disposable-email`;
exports.MISSING_FIELD = `${http_status_codes_1.UNPROCESSABLE_ENTITY}/missing-field`;
exports.DOMAIN_MISSING_FILE = `${http_status_codes_1.BAD_REQUEST}/domain-missing-file`;
exports.DOMAIN_MISSING_DNS = `${http_status_codes_1.BAD_REQUEST}/domain-missing-dns`;
// Not found
exports.RESOURCE_NOT_FOUND = `${http_status_codes_1.NOT_FOUND}/resource-not-found`;
exports.USER_NOT_FOUND = `${http_status_codes_1.NOT_FOUND}/user-not-found`;
exports.MEMBERSHIP_NOT_FOUND = `${http_status_codes_1.NOT_FOUND}/membership-not-found`;
exports.ORGANIZATION_NOT_FOUND = `${http_status_codes_1.NOT_FOUND}/organization-not-found`;
exports.SUBSCRIPTION_NOT_FOUND = `${http_status_codes_1.NOT_FOUND}/subscription-not-found`;
exports.INVOICE_NOT_FOUND = `${http_status_codes_1.NOT_FOUND}/invoice-not-found`;
exports.STRIPE_NO_CUSTOMER = `${http_status_codes_1.NOT_FOUND}/no-customer`;
// Conflicts
exports.EMAIL_EXISTS = `${http_status_codes_1.CONFLICT}/email-exists`;
exports.USERNAME_EXISTS = `${http_status_codes_1.CONFLICT}/username-exists`;
exports.INVALID_LOGIN = `${http_status_codes_1.UNAUTHORIZED}/invalid-login`;
exports.DOMAIN_ALREADY_VERIFIED = `${http_status_codes_1.BAD_REQUEST}/domain-already-verified`;
exports.USER_IS_MEMBER_ALREADY = `${http_status_codes_1.BAD_REQUEST}/user-is-member-already`;
// Authentication & authorization
exports.INCORRECT_PASSWORD = `${http_status_codes_1.UNAUTHORIZED}/incorrect-password`;
exports.INSUFFICIENT_PERMISSION = `${http_status_codes_1.FORBIDDEN}/insufficient-permission`;
exports.UNVERIFIED_EMAIL = `${http_status_codes_1.UNAUTHORIZED}/unverified-email`;
exports.UNAPPROVED_LOCATION = `${http_status_codes_1.UNAUTHORIZED}/unapproved-location`;
exports.INVALID_2FA_TOKEN = `${http_status_codes_1.UNAUTHORIZED}/invalid-2fa-token`;
exports.INVALID_API_KEY_SECRET = `${http_status_codes_1.UNAUTHORIZED}/invalid-api-key-secret`;
exports.IP_RANGE_CHECK_FAIL = `${http_status_codes_1.UNAUTHORIZED}/ip-range-check-fail`;
exports.REFERRER_CHECK_FAIL = `${http_status_codes_1.UNAUTHORIZED}/referrer-check-fail`;
exports.OAUTH_NO_ID = `${http_status_codes_1.UNPROCESSABLE_ENTITY}/oauth-no-id`;
exports.OAUTH_IDENTITY_TAKEN = `${http_status_codes_1.CONFLICT}/oauth-identity-taken`;
exports.OAUTH_NO_NAME = `${http_status_codes_1.UNPROCESSABLE_ENTITY}/oauth-no-name`;
exports.OAUTH_ERROR = `${http_status_codes_1.BAD_REQUEST}/oauth-error`;
exports.OAUTH_NO_EMAIL = `${http_status_codes_1.NOT_FOUND}/oauth-no-email`;
// Bad requests
exports.EMAIL_CANNOT_DELETE = `${http_status_codes_1.BAD_REQUEST}/cannot-delete-email`;
exports.CANNOT_DELETE_SOLE_MEMBER = `${http_status_codes_1.BAD_REQUEST}/cannot-delete-sole-member`;
exports.CANNOT_DELETE_SOLE_OWNER = `${http_status_codes_1.BAD_REQUEST}/cannot-delete-sole-owner`;
exports.CANNOT_UPDATE_SOLE_OWNER = `${http_status_codes_1.BAD_REQUEST}/cannot-update-sole-owner`;
exports.NOT_ENABLED_2FA = `${http_status_codes_1.BAD_REQUEST}/invalid-2fa-token`;
exports.CANNOT_INVITE_DOMAIN = `${http_status_codes_1.BAD_REQUEST}/cannot-invite-domain`;
// Error logging
const signale_1 = require("signale");
Object.defineProperty(exports, "await", { enumerable: true, get: function () { return signale_1.await; } });
Object.defineProperty(exports, "complete", { enumerable: true, get: function () { return signale_1.complete; } });
Object.defineProperty(exports, "error", { enumerable: true, get: function () { return signale_1.error; } });
Object.defineProperty(exports, "debug", { enumerable: true, get: function () { return signale_1.debug; } });
Object.defineProperty(exports, "fatal", { enumerable: true, get: function () { return signale_1.fatal; } });
Object.defineProperty(exports, "fav", { enumerable: true, get: function () { return signale_1.fav; } });
Object.defineProperty(exports, "info", { enumerable: true, get: function () { return signale_1.info; } });
Object.defineProperty(exports, "note", { enumerable: true, get: function () { return signale_1.note; } });
Object.defineProperty(exports, "pause", { enumerable: true, get: function () { return signale_1.pause; } });
Object.defineProperty(exports, "pending", { enumerable: true, get: function () { return signale_1.pending; } });
Object.defineProperty(exports, "star", { enumerable: true, get: function () { return signale_1.star; } });
Object.defineProperty(exports, "start", { enumerable: true, get: function () { return signale_1.start; } });
Object.defineProperty(exports, "success", { enumerable: true, get: function () { return signale_1.success; } });
Object.defineProperty(exports, "warn", { enumerable: true, get: function () { return signale_1.warn; } });
Object.defineProperty(exports, "watch", { enumerable: true, get: function () { return signale_1.watch; } });
Object.defineProperty(exports, "log", { enumerable: true, get: function () { return signale_1.log; } });
/**
 * Log an error to the console
 * @param category - Category for error
 * @param err - Error message
 * @param level - Error code: warning (2) or error (1)
 */
exports.logError = (category, err, level = 2) => {
    if (level === 1)
        return signale_1.error(`${category}: ${err}`);
    signale_1.warn(`${category}: ${err}`);
};
//# sourceMappingURL=index.js.map